[{"/home/raju/Desktop/project/covidtracker/src/index.js":"1","/home/raju/Desktop/project/covidtracker/src/App.js":"2","/home/raju/Desktop/project/covidtracker/src/reportWebVitals.js":"3","/home/raju/Desktop/project/covidtracker/src/component/Checkbox.js":"4","/home/raju/Desktop/project/covidtracker/src/component/Show.js":"5","/home/raju/Desktop/project/covidtracker/src/component/Main.js":"6","/home/raju/Desktop/Covid19Tracker/src/index.js":"7","/home/raju/Desktop/Covid19Tracker/src/App.js":"8","/home/raju/Desktop/Covid19Tracker/src/reportWebVitals.js":"9","/home/raju/Desktop/Covid19Tracker/src/component/Main.js":"10","/home/raju/Desktop/Covid19Tracker/src/component/Checkbox.js":"11","/home/raju/Desktop/Covid19Tracker/src/component/Show.js":"12"},{"size":500,"mtime":1630426240923,"results":"13","hashOfConfig":"14"},{"size":499,"mtime":1630512888653,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1630426240927,"results":"16","hashOfConfig":"14"},{"size":358,"mtime":1630512512717,"results":"17","hashOfConfig":"14"},{"size":2346,"mtime":1630512280620,"results":"18","hashOfConfig":"14"},{"size":1854,"mtime":1630512872664,"results":"19","hashOfConfig":"14"},{"size":500,"mtime":1630426240923,"results":"20","hashOfConfig":"21"},{"size":499,"mtime":1630512888653,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1630426240927,"results":"23","hashOfConfig":"21"},{"size":1854,"mtime":1630512872664,"results":"24","hashOfConfig":"21"},{"size":358,"mtime":1630512512717,"results":"25","hashOfConfig":"21"},{"size":2346,"mtime":1630512280620,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1mtlplc",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eytno6",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/raju/Desktop/project/covidtracker/src/index.js",[],["53","54"],"/home/raju/Desktop/project/covidtracker/src/App.js",[],"/home/raju/Desktop/project/covidtracker/src/reportWebVitals.js",[],"/home/raju/Desktop/project/covidtracker/src/component/Checkbox.js",[],"/home/raju/Desktop/project/covidtracker/src/component/Show.js",["55"],"import React, { useEffect, useState } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport \"./MainCss.css\";\n\n\nconst Show=(props)=> {\n  const [graph, setGraph] = useState([]);\n  const [total, setTotal] = useState([]);\n\n  useEffect(() => {\n    let arrayValue = Object.values(props.dataObj);\n    let objToAdd = [[\"City\", \"recovered\", \"deceased\"]];\n    let arrytoClone = [];\n    let allstate = 0,\n      tested = 0,\n      recoverd = 0,\n      confirm = 0;\n\n    Object.entries(Object.values(props.datajson)[0]).map(\n      ([keys, value], index) => {\n        if (arrayValue[index] === true) {\n          allstate += 1;\n          tested += value.total.tested;\n          recoverd += value.total.recovered;\n          confirm += value.total.confirmed;\n          objToAdd.push([keys, value.total.recovered, value.total.deceased]);\n        }\n      }\n    );\n\n    arrytoClone.push(allstate);\n    arrytoClone.push(tested);\n    arrytoClone.push(confirm);\n    arrytoClone.push(recoverd);\n    setTotal(arrytoClone);\n    setGraph(objToAdd);\n  }, [props]);\n\n  function kFormatter(num) {\n    return Math.abs(num) > 999\n      ? Math.sign(num) * (Math.abs(num) / 1000).toFixed(1) + \"k\"\n      : Math.sign(num) * Math.abs(num);\n  }\n\n  return (\n    <div>\n      <div>\n        <div className=\"stateDiv\">\n          <h3>SELECTED STATE</h3>\n          <p> {total[0]}</p>\n        </div>\n\n        <div className=\"showDiv\">\n          <h3>TESTED</h3>\n          <p> {kFormatter(total[1])}</p>\n        </div>\n\n        <div className=\"showDiv\">\n          <h3>CONFIRMED</h3>\n          <p> {kFormatter(total[2])}</p>\n        </div>\n\n        <div className=\"showDiv\">\n          <h3>RECOVERED</h3>\n          <p> {kFormatter(total[3])}</p>\n        </div>\n      </div>\n      <h3 className=\"graphicalText\">GRAPHICAL REPRESENTATION</h3>\n\n      <div className=\"secondiv\">\n        <p className=\"stetetext\">STATE WISE</p>\n        <p className=\"stetetext\">DISTRICT WISE BY STATE GROUPED</p>\n      </div>\n\n      <h4 className=\"text\">TESTED CONFIRMED AND RECOVERED STATE</h4>\n\n      <Chart\n        width={\"900px\"}\n        height={\"800px\"}\n        chartType=\"BarChart\"\n        loader={<div>Loading Chart</div>}\n        data={graph}\n        options={{\n          chartArea: { width: \"40%\", height: \"40%\" },\n          isStacked: true,\n        }}\n      />\n    </div>\n  );\n}\nexport default Show;","/home/raju/Desktop/project/covidtracker/src/component/Main.js",["56","57"],"/home/raju/Desktop/Covid19Tracker/src/index.js",[],"/home/raju/Desktop/Covid19Tracker/src/App.js",[],"/home/raju/Desktop/Covid19Tracker/src/reportWebVitals.js",[],"/home/raju/Desktop/Covid19Tracker/src/component/Main.js",["58","59"],"/home/raju/Desktop/Covid19Tracker/src/component/Checkbox.js",[],"/home/raju/Desktop/Covid19Tracker/src/component/Show.js",["60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":20,"column":30,"nodeType":"67","messageId":"68","endLine":20,"endColumn":32},{"ruleId":"65","severity":1,"message":"66","line":16,"column":73,"nodeType":"67","messageId":"68","endLine":16,"endColumn":75},{"ruleId":"65","severity":1,"message":"66","line":28,"column":73,"nodeType":"67","messageId":"68","endLine":28,"endColumn":75},{"ruleId":"65","severity":1,"message":"66","line":16,"column":73,"nodeType":"67","messageId":"68","endLine":16,"endColumn":75},{"ruleId":"65","severity":1,"message":"66","line":28,"column":73,"nodeType":"67","messageId":"68","endLine":28,"endColumn":75},{"ruleId":"65","severity":1,"message":"66","line":20,"column":30,"nodeType":"67","messageId":"68","endLine":20,"endColumn":32},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]