{"ast":null,"code":"var _jsxFileName = \"/home/raju/Desktop/project/covidtracker/src/component/Show.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./MainCss.css\";\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Show = props => {\n  _s();\n\n  const [graph, setGraph] = useState([]);\n  const [total, setTotal] = useState([]);\n  useEffect(() => {\n    let arrayValue = Object.values(props.stateobj);\n    let objToAdd = [[\"City\", \"recovered\", \"deceased\"]];\n    let arrytoClone = [];\n    let allstate = 0,\n        tested = 0,\n        recoverd = 0,\n        confirm = 0;\n    Object.entries(Object.values(props.datajson)[0]).map(([keys, value], index) => {\n      if (arrayValue[index] === true) {\n        allstate += 1;\n        tested += value.total.tested;\n        recoverd += value.total.recovered;\n        confirm += value.total.confirmed;\n        objToAdd.push([keys, value.total.recovered, value.total.deceased]);\n      }\n    });\n    arrytoClone.push(allstate);\n    arrytoClone.push(tested);\n    arrytoClone.push(confirm);\n    arrytoClone.push(recoverd);\n    setTotal(arrytoClone);\n    setGraph(objToAdd);\n  }, [props]);\n\n  function kFormatter(num) {\n    return Math.abs(num) > 999 ? Math.sign(num) * (Math.abs(num) / 1000).toFixed(1) + \"k\" : Math.sign(num) * Math.abs(num);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stateDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"SELECTED STATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", total[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"TESTED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", kFormatter(total[1])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"CONFIRMED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", kFormatter(total[2])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"RECOVERED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", kFormatter(total[3])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"graphicalText\",\n      children: \"GRAPHICAL REPRESENTATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"secondiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"stetetext\",\n        children: \"STATE WISE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"stetetext\",\n        children: \"DISTRICT WISE BY STATE GROUPED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text\",\n      children: \"TESTED CONFIRMED AND RECOVERED STATE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      width: \"800px\",\n      height: \"130px\",\n      chartType: \"BarChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this),\n      data: graph,\n      options: {\n        chartArea: {\n          width: \"40%\",\n          height: \"40%\"\n        },\n        isStacked: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Show, \"ONvrpsNAXdzVnmbhBrwfAZqzLmU=\");\n\n_c = Show;\nexport default Show;\n\nvar _c;\n\n$RefreshReg$(_c, \"Show\");","map":{"version":3,"sources":["/home/raju/Desktop/project/covidtracker/src/component/Show.js"],"names":["React","useEffect","useState","Chart","Show","props","graph","setGraph","total","setTotal","arrayValue","Object","values","stateobj","objToAdd","arrytoClone","allstate","tested","recoverd","confirm","entries","datajson","map","keys","value","index","recovered","confirmed","push","deceased","kFormatter","num","Math","abs","sign","toFixed","chartArea","width","height","isStacked"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./MainCss.css\";\nimport { Chart } from \"react-google-charts\";\n\nconst Show=(props)=> {\n  const [graph, setGraph] = useState([]);\n  const [total, setTotal] = useState([]);\n\n  useEffect(() => {\n    let arrayValue = Object.values(props.stateobj);\n    let objToAdd = [[\"City\", \"recovered\", \"deceased\"]];\n    let arrytoClone = [];\n    let allstate = 0,\n      tested = 0,\n      recoverd = 0,\n      confirm = 0;\n\n    Object.entries(Object.values(props.datajson)[0]).map(\n      ([keys, value], index) => {\n        if (arrayValue[index] === true) {\n          allstate += 1;\n          tested += value.total.tested;\n          recoverd += value.total.recovered;\n          confirm += value.total.confirmed;\n          objToAdd.push([keys, value.total.recovered, value.total.deceased]);\n        }\n      }\n    );\n\n    arrytoClone.push(allstate);\n    arrytoClone.push(tested);\n    arrytoClone.push(confirm);\n    arrytoClone.push(recoverd);\n    setTotal(arrytoClone);\n    setGraph(objToAdd);\n  }, [props]);\n\n  function kFormatter(num) {\n    return Math.abs(num) > 999\n      ? Math.sign(num) * (Math.abs(num) / 1000).toFixed(1) + \"k\"\n      : Math.sign(num) * Math.abs(num);\n  }\n\n  return (\n    <div>\n      <div>\n        <div className=\"stateDiv\">\n          <h3>SELECTED STATE</h3>\n          <p> {total[0]}</p>\n        </div>\n\n        <div className=\"div2\">\n          <h3>TESTED</h3>\n          <p> {kFormatter(total[1])}</p>\n        </div>\n\n        <div className=\"div2\">\n          <h3>CONFIRMED</h3>\n          <p> {kFormatter(total[2])}</p>\n        </div>\n\n        <div className=\"div2\">\n          <h3>RECOVERED</h3>\n          <p> {kFormatter(total[3])}</p>\n        </div>\n      </div>\n      <h3 className=\"graphicalText\">GRAPHICAL REPRESENTATION</h3>\n\n      <div className=\"secondiv\">\n        <p className=\"stetetext\">STATE WISE</p>\n        <p className=\"stetetext\">DISTRICT WISE BY STATE GROUPED</p>\n      </div>\n\n      <h4 className=\"text\">TESTED CONFIRMED AND RECOVERED STATE</h4>\n\n      <Chart\n        width={\"800px\"}\n        height={\"130px\"}\n        chartType=\"BarChart\"\n        loader={<div>Loading Chart</div>}\n        data={graph}\n        options={{\n          chartArea: { width: \"40%\", height: \"40%\" },\n          isStacked: true,\n        }}\n      />\n    </div>\n  );\n}\nexport default Show;"]},"metadata":{},"sourceType":"module"}