{"ast":null,"code":"var _jsxFileName = \"/home/raju/Desktop/project/covidtracker/src/component/ChildComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./ChildComponent.css\";\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidecomponent(props) {\n  _s();\n\n  const [graphArry, setgraphArry] = useState([]);\n  const [tvsArry, settvsArry] = useState([]);\n  useEffect(() => {\n    let valuarr = Object.values(props.stateobj);\n    let myobjtoAdd = [[\"City\", \"recovered\", \"deceased\"]];\n    let arrytoClone = [];\n    let allstate = 0,\n        tetsed = 0,\n        recoverd = 0,\n        confirm = 0;\n    Object.entries(Object.values(props.datajson)[0]).map(([keys, value], index) => {\n      if (valuarr[index] == true) {\n        allstate += 1;\n        tetsed += value.total.tested;\n        recoverd += value.total.recovered;\n        confirm += value.total.confirmed;\n        myobjtoAdd.push([keys, value.total.recovered, value.total.deceased]);\n      }\n    });\n    arrytoClone.push(allstate);\n    arrytoClone.push(tetsed);\n    arrytoClone.push(confirm);\n    arrytoClone.push(recoverd);\n    settvsArry(arrytoClone);\n    setgraphArry(myobjtoAdd);\n  }, [props]);\n\n  function kFormatter(num) {\n    return Math.abs(num) > 999 ? Math.sign(num) * (Math.abs(num) / 1000).toFixed(1) + \"k\" : Math.sign(num) * Math.abs(num);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"SELECTED STATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", tvsArry[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"TESTED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", kFormatter(tvsArry[1])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"CONFIRMED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", kFormatter(tvsArry[2])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"RECOVERED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", kFormatter(tvsArry[3])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"gptext\",\n      children: \"GRAPHICAL REPRESENTATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"secondiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"stetetext\",\n        children: \"STATE WISE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"stetetext\",\n        children: \"DISTRICT WISE BY STATE GROUPED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text\",\n      children: \"TESTED CONFIRMED AND RECOVERED STATE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      width: \"800px\",\n      height: \"1300px\",\n      chartType: \"BarChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this),\n      data: graphArry,\n      options: {\n        chartArea: {\n          width: \"40\",\n          height: \"85%\"\n        },\n        isStacked: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sidecomponent, \"9eL4w7dHYxUGHc4gtfUaM8VOgmQ=\");\n\n_c = Sidecomponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidecomponent\");","map":{"version":3,"sources":["/home/raju/Desktop/project/covidtracker/src/component/ChildComponent.js"],"names":["React","useEffect","useState","Chart","Sidecomponent","props","graphArry","setgraphArry","tvsArry","settvsArry","valuarr","Object","values","stateobj","myobjtoAdd","arrytoClone","allstate","tetsed","recoverd","confirm","entries","datajson","map","keys","value","index","total","tested","recovered","confirmed","push","deceased","kFormatter","num","Math","abs","sign","toFixed","chartArea","width","height","isStacked"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./ChildComponent.css\";\nimport { Chart } from \"react-google-charts\";\n\nexport default function Sidecomponent(props) {\n  const [graphArry, setgraphArry] = useState([]);\n  const [tvsArry, settvsArry] = useState([]);\n\n  useEffect(() => {\n    let valuarr = Object.values(props.stateobj);\n    let myobjtoAdd = [[\"City\", \"recovered\", \"deceased\"]];\n    let arrytoClone = [];\n    let allstate = 0,\n      tetsed = 0,\n      recoverd = 0,\n      confirm = 0;\n\n    Object.entries(Object.values(props.datajson)[0]).map(\n      ([keys, value], index) => {\n        if (valuarr[index] == true) {\n          allstate += 1;\n          tetsed += value.total.tested;\n          recoverd += value.total.recovered;\n          confirm += value.total.confirmed;\n          myobjtoAdd.push([keys, value.total.recovered, value.total.deceased]);\n        }\n      }\n    );\n\n    arrytoClone.push(allstate);\n    arrytoClone.push(tetsed);\n    arrytoClone.push(confirm);\n    arrytoClone.push(recoverd);\n    settvsArry(arrytoClone);\n    setgraphArry(myobjtoAdd);\n  }, [props]);\n\n  function kFormatter(num) {\n    return Math.abs(num) > 999\n      ? Math.sign(num) * (Math.abs(num) / 1000).toFixed(1) + \"k\"\n      : Math.sign(num) * Math.abs(num);\n  }\n\n  return (\n    <div>\n      <div>\n        <div className=\"div1\">\n          <h3>SELECTED STATE</h3>\n          <p> {tvsArry[0]}</p>\n        </div>\n\n        <div className=\"div2\">\n          <h3>TESTED</h3>\n          <p> {kFormatter(tvsArry[1])}</p>\n        </div>\n\n        <div className=\"div2\">\n          <h3>CONFIRMED</h3>\n          <p> {kFormatter(tvsArry[2])}</p>\n        </div>\n\n        <div className=\"div2\">\n          <h3>RECOVERED</h3>\n          <p> {kFormatter(tvsArry[3])}</p>\n        </div>\n      </div>\n      <h3 className=\"gptext\">GRAPHICAL REPRESENTATION</h3>\n\n      <div className=\"secondiv\">\n        <p className=\"stetetext\">STATE WISE</p>\n        <p className=\"stetetext\">DISTRICT WISE BY STATE GROUPED</p>\n      </div>\n\n      <h4 className=\"text\">TESTED CONFIRMED AND RECOVERED STATE</h4>\n\n      <Chart\n        width={\"800px\"}\n        height={\"1300px\"}\n        chartType=\"BarChart\"\n        loader={<div>Loading Chart</div>}\n        data={graphArry}\n        options={{\n          chartArea: { width: \"40\", height: \"85%\" },\n          isStacked: true,\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}